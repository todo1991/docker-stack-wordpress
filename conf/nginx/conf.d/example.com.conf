# The path to store the cache files, limit the folder to 1G
fastcgi_cache_path /run/nginx-cache levels=1:2 keys_zone=WORDPRESS:10m max_size=1024m inactive=1w;

# A unique request is defined by this cache key
fastcgi_cache_key "$scheme$request_method$host$request_uri";

# Don't use the following headers to define the cache variables
fastcgi_ignore_headers Cache-Control Expires Set-Cookie;

# limit the number of connections per single IP
limit_conn_zone $binary_remote_addr zone=addr:10m;

# limit the number of requests for a given session
limit_req_zone $binary_remote_addr zone=req_limit_per_ip:10m rate=20r/s;
limit_req_zone $binary_remote_addr zone=one:10m rate=1r/s;

upstream backend {
	zone upstreams 64K;
	server wordpress_instance:9000;
}

server {
        listen 80;
        listen [::]:80;

        server_name example.com www.example.com ;

        location ~ /.well-known/acme-challenge {
                allow all;
                root /var/www/html;
        }

        location / {
                rewrite ^ https://$host$request_uri? permanent;
        }
}

server {
	listen 443 ssl;
        listen [::]:443 ssl;
        server_name example.com www.example.com ;
	root /var/www/html;
	index index.php index.html index.htm;

	# logs file here
	access_log  /var/log/nginx/example.com.access.log combined;
	error_log  /var/log/nginx/example.com.error.log warn;

	# limit IP connect and requets
	limit_conn addr 30;
	limit_req zone=req_limit_per_ip burst=120 delay=100;

	testcookie off;
	include conf.d/addoption/options-testcookie.conf;

	# Enable ModSecurity
 	modsecurity off;
	modsecurity_rules_file /etc/nginx/modsec/main.conf;

	# Keepalive for 70 seconds
	keepalive_timeout 70;

	# Slowloris attack
	client_body_timeout 5s;
	client_header_timeout 5s;

	# Upload limit
	client_max_body_size 50m;
	client_body_buffer_size 128k;

	# config SLL path
	http2 on;
	ssl_certificate /etc/letsencrypt/live/example.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/example.com/privkey.pem;
        ssl_trusted_certificate /etc/letsencrypt/live/example.com/chain.pem;
	include conf.d/addoption/options-ssl.conf;

	# Add Permalink Support to NGINX
        location / {
                try_files $uri $uri/ /index.php$is_args$args;
		if ($args ~ "^author=\d") { return 403; }
        }

	include conf.d/addoption/options-dynamic-cache.conf;
	include conf.d/addoption/wordpressprotect.conf;

        # config pass to php-fpm
        location ~ \.php$ {
		include fastcgi_params;

		# Extra security measure, but only possible when PHP-FPM is on the same server as Nginx
                try_files $uri =404;

		# limit  access wp-login.php bruteforce attack
                location ~* wp\-login\.php {
                        limit_req   zone=one  burst=1 nodelay;
                        fastcgi_pass backend;
                }

		# Fastcgi configuration
                fastcgi_split_path_info ^(.+\.php)(/.+)$;
                fastcgi_index index.php;
		fastcgi_read_timeout 360s;
		fastcgi_busy_buffers_size 256k;
		fastcgi_temp_file_write_size 256k;
		fastcgi_buffers 32 32k;
		fastcgi_buffer_size 32k;
		fastcgi_connect_timeout 5s;
		fastcgi_send_timeout 120s;
                fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
                fastcgi_param PATH_INFO $fastcgi_path_info;

		# Use the WORDPRESS zone
		fastcgi_cache WORDPRESS;

		# Restricts the number of concurrent attempts to populate the cache
		fastcgi_cache_lock on;
		fastcgi_cache_valid 1s;
		fastcgi_cache_use_stale error timeout updating invalid_header http_500 http_503;
		fastcgi_cache_background_update on;

		# Don't cache when $skip_cache is true
		fastcgi_cache_bypass $skip_cache;
        	fastcgi_no_cache $skip_cache;

		# Set cache status and some header
		include conf.d/addoption/options-header.conf;

		# Pass request to PHP-FPM
		fastcgi_pass backend;
        }

	location ~ /purge(/.*) {
		fastcgi_cache_purge WORDPRESS "$scheme$request_method$host$1";
	}

	include conf.d/addoption/options-static-cache.conf;
	include conf.d/addoption/options-zip.conf;
	include conf.d/addoption/cloudflare.conf;

	location /nginx_status {
          stub_status on;
          access_log   off;
        }
}
